from Crypto.Util.number import bytes_to_long, long_to_bytes
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad

# Parametri del problema
p = 160254863817160498560624126448692149764262814776729935946128853459300189586245899131820306123723247239484514665508911587183867994664631067197036527752161621909575846297761078176617925445837282508342323579436594036815329372545109518586146609017095505443725203266461696055219704033362498281176468993490862184767
g = 83818512386773709731711487825198584857478393286357619654730756963492915545524320976217146271733572982884142085270167584377210146629999319624216617122076758459557539607841256309596909336261509054321814129201262459092671807173642042770040766128125926478735264066076438561541691913371955260209880957604707258227
# private number => g^a mod p -> public number
a = 28101140277194180070228629403499538829296099553471035238900932469285163037566549276528875646860117892259278845323224800006655816222935998267227553815123460182530706139743448844913018578080946790418286404701171239871507113604416317464510830640638840960088357552691175939165199030685543504341605340533189827263
# sheared secret
s = 0x45adc7f14ed1528eda69e4b19ce6ecb1093d435c3ce98773c074246f89f68f7e9b96ae1e4f496a584e93f0a12ab5fc8ba9c5cb49c875744a1d1154fe27ebac827784c6164d35c239635b28d5226fd4858c33d56dfeebd99b476dfda08167e2d29295aee3d230aeaf5a1234acdc3d699509c13ced84e5deea5378f39f19436656

iv = 0xfd71e27d6a7bc55a0102574dee0a80ec
msg = 0x42bc356001afa84da3856f5b9b3d1bb70eabec8c5cb3b2accea9a9b43200b5552b3a24e94d56dc44ce3d8fe28c14c06abdc4942e437fe13d38334083a424678f

# decrypt del messaggio, usando Diffie-Hellman


def decrypt_diffie_hellman():
    # Calcola il segreto condiviso
    key = pow(s, a, p)

    # Converti in bytes e taglia ai primi 16 bytes
    key = long_to_bytes(key)[:16]

    # Converti IV e messaggio in bytes
    IV = long_to_bytes(iv)
    lmsg = long_to_bytes(msg)

    # Decripta
    cipher = AES.new(key, AES.MODE_CBC, IV=IV)
    plaintext = unpad(cipher.decrypt(lmsg), AES.block_size)

    return plaintext


# Esegui la decriptazione
try:
    result = decrypt_diffie_hellman()
    print("Messaggio decriptato:", result.decode('utf-8'))
except Exception as e:
    print("Errore durante la decriptazione:", e)
